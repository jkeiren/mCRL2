name: Build and Test (Windows)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  test:
    name: Test
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:      
        suite: [librarytest, libraryexample, tooltest, randomtest, regressiontest]
    
    # This step is necessary for Conda to activate the environment properly
    defaults:
      run:
        shell: pwsh

    steps:
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
            
    - name: Install Python dependencies for Windows
      run: |
        pip3 install psutil pyyaml

    - name: Set up conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        auto-update-conda: true
        activate-environment: conda-env

    - name: Install dependencies for Windows
      run: |
        conda install -c conda-forge qt boost                

    # Performs the git checkout in the github.workspace/src directory
    - uses: actions/checkout@v3 
      with:
        path: src
    
    # Configure and install (s)ccache
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{github.workflow}}-${{github.job}}-${{matrix.suite}}

    # Configure CMake in a 'build' subdirectory        
    - name: Configure CMake Windows
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_EXPERIMENTAL=ON
        -DMCRL2_ENABLE_DEPRECATED=ON
        -DMCRL2_ENABLE_TESTS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -B ${{github.workspace}}/build
        -S ${{github.workspace}}/src
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}

    - name: Test - ${{ matrix.suite }}
      working-directory: ${{github.workspace}}/build
      run: ctest -L ${{ matrix.suite }} -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
