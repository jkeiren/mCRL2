name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:      
        os: [ubuntu-20.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    # This step is necessary for Conda to activate the environment properly, bash is available on all runners.
    defaults:
      run:
        shell: bash -el {0}

    steps:
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
      
    # Install the packages required for building and testing.
    #- uses: awalsh128/cache-apt-pkgs-action@latest
    #  with:
    #    packages: build-essential libboost-dev libgl1-mesa-dev qtbase5-dev python3-psutil python3-yaml ccache
    #    version: 1.0
    - name: Install dependencies for Ubuntu
      run: sudo apt install -y build-essential libboost-dev libgl1-mesa-dev qtbase5-dev python3-psutil python3-yaml ccache
      if: runner.os == 'Linux' 
      
    - name: Install dependencies for MacOS
      run: |
        brew update
        brew install qt@5 boost ccache
        pip3 install psutil pyyaml
      if: runner.os == 'macOS'
      
    - name: Set up conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        auto-update-conda: true
        activate-environment: conda-env
      if: runner.os == 'Windows'

    - name: Install dependencies for Windows
      run: |
        conda install -c conda-forge qt boost
        pip install psutil pyyaml
      if: runner.os == 'Windows'
                
    # Performs the git checkout in the github.workspace/src directory
    - uses: actions/checkout@v3 
      with:
        path: src
    
    # Configure and install (s)ccache
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ matrix.os }}

    # Configure CMake in a 'build' subdirectory        
    - name: Configure CMake Linux
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_EXPERIMENTAL=ON
        -DMCRL2_ENABLE_DEPRECATED=ON
        -DMCRL2_ENABLE_TESTS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -B ${{github.workspace}}/build
        -S ${{github.workspace}}/src
      if: runner.os == 'Linux'
        
    - name: Configure CMake MacOS
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_EXPERIMENTAL=ON
        -DMCRL2_ENABLE_DEPRECATED=ON
        -DMCRL2_ENABLE_TESTS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DQt5_DIR=$(brew --prefix qt5)/lib/cmake/Qt5
        -DMACDEPLOYQT=$(brew --prefix qt5)/bin/
        -B ${{github.workspace}}/build
        -S ${{github.workspace}}/src
      if: runner.os == 'macOS'
      
    # Note: We have to use this weird ${} construction because we use bash as shell on Windows.
    - name: Configure CMake Windows
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_EXPERIMENTAL=ON
        -DMCRL2_ENABLE_DEPRECATED=ON
        -DMCRL2_ENABLE_TESTS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -B $GITHUB_ACTION_PATH/build
        -S $GITHUB_ACTION_PATH/src
      if: runner.os == 'Windows'

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}

    - name: Test librarytest
      working-directory: ${{github.workspace}}/build
      run: ctest -L librarytest -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}

    - name: Test libraryexample
      working-directory: ${{github.workspace}}/build
      run: ctest -L libraryexample -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}

    - name: Test tooltest
      working-directory: ${{github.workspace}}/build
      run: ctest -L tooltest -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
      
    - name: Test randomtest
      working-directory: ${{github.workspace}}/build
      run: ctest -L randomtest -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
      
    - name: Test regressiontest
      working-directory: ${{github.workspace}}/build
      run: ctest -L regressiontest -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
