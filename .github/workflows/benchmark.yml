name: Build and Test (Ubuntu)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  test:
    name: Benchmark
    runs-on: ubuntu-20.04
    
    steps:
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
      
    # Install the packages required for building and testing.
    #- uses: awalsh128/cache-apt-pkgs-action@latest
    #  with:
    #    packages: build-essential libboost-dev libgl1-mesa-dev qtbase5-dev python3-psutil python3-yaml ccache
    #    version: 1.0
    - name: Install dependencies for Ubuntu
      run: sudo apt install -y build-essential libboost-dev ccache
      
    # Performs the git checkout in the github.workspace/src directory
    - uses: actions/checkout@v3 
      with:
        path: src
    
    # Configure and install (s)ccache
    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{github.workflow}}-${{github.job}}

    # Configure CMake in a 'build' subdirectory        
    - name: Configure CMake Linux
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_GUI_TOOLS=OFF
        -DMCRL2_ENABLE_BENCHMARKS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -B ${{github.workspace}}/build
        -S ${{github.workspace}}/src
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}
      
    - name: Benchmark
      working-directory: ${{github.workspace}}/build
      run: ctest -L benchmark -C ${{env.BUILD_TYPE}} -j ${{steps.cpu-cores.outputs.count}}