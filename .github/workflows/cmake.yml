name: Build and Test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  NUMBER_OF_THREADS: 2

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
      
    # Install the packages required for building and testing.
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: build-essential libboost-dev libgl1-mesa-dev qtbase5-dev python3-psutil python3-yaml
        version: 1.0
                
    # Performs the git checkout in the github.workspace/src directory
    - uses: actions/checkout@v3 
      with:
        path: src
    
    - uses: hendrikmuhs/ccache-action@v1.2 # Adds ccache
      with:
        key: ${{ github.job }}-${{ matrix.os }}

    # Configure CMake in a 'build' subdirectory
    - name: Configure CMake 
      run: >
        cmake 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DMCRL2_ENABLE_EXPERIMENTAL=ON
        -DMCRL2_ENABLE_DEPRECATED=ON
        -DMCRL2_ENABLE_TESTS=ON
        -DCMAKE_C_COMPILER_LAUNCHER=ccache
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -B ${{github.workspace}}/build
        ${{github.workspace}}/src

    # Build your program with the given configuration
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{env.NUMBER_OF_THREADS}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -j ${{env.NUMBER_OF_THREADS}}

